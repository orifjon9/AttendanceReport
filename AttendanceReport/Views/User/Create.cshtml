@using AttendanceReport.Helpers
@model AttendanceReport.Models.UserRoleViewModel
@{
    List<SelectListItem> list = new List<SelectListItem>()
    {
        new SelectListItem(){
            Selected = true,
            Text = (UserRole.Administrator).ToString(),
            Value = ((int)UserRole.Administrator).ToString()
        },
        new SelectListItem(){ Text = (UserRole.Staff).ToString(), Value = ((int)UserRole.Staff).ToString()},
        new SelectListItem(){ Text = (UserRole.Faculty).ToString(), Value = ((int)UserRole.Faculty).ToString()},
        new SelectListItem(){ Text = (UserRole.Student).ToString(), Value = ((int)UserRole.Student).ToString()}
    };
}
@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <br>
        <h4>Create new user</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <label class="has-error">@ViewBag.Error</label>

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class = "control-label col-md-2">Role</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.TypeId, list, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ObjectId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ObjectId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ObjectId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Find")
</div>
